[{"C:\\Users\\Legion\\bankofstates\\src\\index.js":"1","C:\\Users\\Legion\\bankofstates\\src\\App.js":"2","C:\\Users\\Legion\\bankofstates\\src\\reportWebVitals.js":"3","C:\\Users\\Legion\\bankofstates\\src\\header\\Header.js":"4","C:\\Users\\Legion\\bankofstates\\src\\home\\Home.js":"5","C:\\Users\\Legion\\bankofstates\\src\\home\\Banner.js":"6","C:\\Users\\Legion\\bankofstates\\src\\StateProvider.js":"7","C:\\Users\\Legion\\bankofstates\\src\\reducer.js":"8","C:\\Users\\Legion\\bankofstates\\src\\about\\About.js":"9","C:\\Users\\Legion\\bankofstates\\src\\product\\Product.js":"10","C:\\Users\\Legion\\bankofstates\\src\\price\\Price.js":"11","C:\\Users\\Legion\\bankofstates\\src\\footer\\Footer.js":"12","C:\\Users\\Legion\\bankofstates\\src\\login\\Login.js":"13","C:\\Users\\Legion\\bankofstates\\src\\register\\Register.js":"14","C:\\Users\\Legion\\bankofstates\\src\\service\\bankService.js":"15","C:\\Users\\Legion\\bankofstates\\src\\user\\User.js":"16","C:\\Users\\Legion\\bankofstates\\src\\admin\\Admin.js":"17","C:\\Users\\Legion\\bankofstates\\src\\menus\\UserMenu.js":"18","C:\\Users\\Legion\\bankofstates\\src\\menus\\AdminMenu.js":"19","C:\\Users\\Legion\\bankofstates\\src\\components\\Card\\CardHeader.js":"20","C:\\Users\\Legion\\bankofstates\\src\\components\\Grid\\GridContainer.js":"21","C:\\Users\\Legion\\bankofstates\\src\\components\\Grid\\GridItem.js":"22","C:\\Users\\Legion\\bankofstates\\src\\components\\Card\\Card.js":"23","C:\\Users\\Legion\\bankofstates\\src\\components\\Card\\CardBody.js":"24","C:\\Users\\Legion\\bankofstates\\src\\components\\Card\\CardIcon.js":"25","C:\\Users\\Legion\\bankofstates\\src\\components\\Card\\CardFooter.js":"26","C:\\Users\\Legion\\bankofstates\\src\\styles\\dashboardStyle.js":"27","C:\\Users\\Legion\\bankofstates\\src\\chart\\PlotlyChart.js":"28","C:\\Users\\Legion\\bankofstates\\src\\styles\\cardHeaderStyle.js":"29","C:\\Users\\Legion\\bankofstates\\src\\styles\\cardBodyStyle.js":"30","C:\\Users\\Legion\\bankofstates\\src\\styles\\cardStyle.js":"31","C:\\Users\\Legion\\bankofstates\\src\\styles\\colors.js":"32","C:\\Users\\Legion\\bankofstates\\src\\styles\\cardIconStyle.js":"33","C:\\Users\\Legion\\bankofstates\\src\\styles\\cardFooterStyle.js":"34","C:\\Users\\Legion\\bankofstates\\src\\logout\\Logout.js":"35","C:\\Users\\Legion\\bankofstates\\src\\deposit\\Deposit.js":"36","C:\\Users\\Legion\\bankofstates\\src\\styles\\typographyStyle.js":"37","C:\\Users\\Legion\\bankofstates\\src\\account\\AccountInfo.js":"38","C:\\Users\\Legion\\bankofstates\\src\\account\\Transactions.js":"39","C:\\Users\\Legion\\bankofstates\\src\\service\\axiosInstance.js":"40","C:\\Users\\Legion\\bankofstates\\src\\withdraw\\Withdraw.js":"41","C:\\Users\\Legion\\bankofstates\\src\\transfer\\AddRecipient.js":"42","C:\\Users\\Legion\\bankofstates\\src\\transfer\\Recipients.js":"43","C:\\Users\\Legion\\bankofstates\\src\\transfer\\Transfer.js":"44","C:\\Users\\Legion\\bankofstates\\src\\admin\\UserMgmt.js":"45","C:\\Users\\Legion\\bankofstates\\src\\admin\\UserDetails.js":"46"},{"size":731,"mtime":1608398584855,"results":"47","hashOfConfig":"48"},{"size":1427,"mtime":1613922023679,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"48"},{"size":2898,"mtime":1613976645178,"results":"51","hashOfConfig":"48"},{"size":1469,"mtime":1608996592320,"results":"52","hashOfConfig":"48"},{"size":1609,"mtime":1608478235949,"results":"53","hashOfConfig":"48"},{"size":399,"mtime":1608398666501,"results":"54","hashOfConfig":"48"},{"size":522,"mtime":1612083948386,"results":"55","hashOfConfig":"48"},{"size":2305,"mtime":1608560237631,"results":"56","hashOfConfig":"48"},{"size":547,"mtime":1608484190932,"results":"57","hashOfConfig":"48"},{"size":4189,"mtime":1608996014279,"results":"58","hashOfConfig":"48"},{"size":4852,"mtime":1609001898952,"results":"59","hashOfConfig":"48"},{"size":3108,"mtime":1610904958555,"results":"60","hashOfConfig":"48"},{"size":5194,"mtime":1610901899544,"results":"61","hashOfConfig":"48"},{"size":903,"mtime":1613921293301,"results":"62","hashOfConfig":"48"},{"size":7346,"mtime":1613936481974,"results":"63","hashOfConfig":"48"},{"size":7445,"mtime":1613929771188,"results":"64","hashOfConfig":"48"},{"size":1817,"mtime":1613323859037,"results":"65","hashOfConfig":"48"},{"size":1349,"mtime":1613920894463,"results":"66","hashOfConfig":"48"},{"size":1221,"mtime":1611413345000,"results":"67","hashOfConfig":"48"},{"size":651,"mtime":1611413345000,"results":"68","hashOfConfig":"48"},{"size":616,"mtime":1611413345000,"results":"69","hashOfConfig":"48"},{"size":1012,"mtime":1611413345000,"results":"70","hashOfConfig":"48"},{"size":980,"mtime":1611413345000,"results":"71","hashOfConfig":"48"},{"size":1003,"mtime":1611413345000,"results":"72","hashOfConfig":"48"},{"size":1136,"mtime":1611413345000,"results":"73","hashOfConfig":"48"},{"size":1768,"mtime":1611413345000,"results":"74","hashOfConfig":"48"},{"size":425,"mtime":1611413345000,"results":"75","hashOfConfig":"48"},{"size":2966,"mtime":1611413345000,"results":"76","hashOfConfig":"48"},{"size":298,"mtime":1611413345000,"results":"77","hashOfConfig":"48"},{"size":775,"mtime":1611413345000,"results":"78","hashOfConfig":"48"},{"size":6673,"mtime":1611413345000,"results":"79","hashOfConfig":"48"},{"size":650,"mtime":1611413345000,"results":"80","hashOfConfig":"48"},{"size":1027,"mtime":1611413345000,"results":"81","hashOfConfig":"48"},{"size":1045,"mtime":1613975743996,"results":"82","hashOfConfig":"48"},{"size":3542,"mtime":1612711933216,"results":"83","hashOfConfig":"48"},{"size":959,"mtime":1611413345000,"results":"84","hashOfConfig":"48"},{"size":1857,"mtime":1613323070967,"results":"85","hashOfConfig":"48"},{"size":3235,"mtime":1612713964302,"results":"86","hashOfConfig":"48"},{"size":390,"mtime":1612083501859,"results":"87","hashOfConfig":"48"},{"size":3870,"mtime":1612718413414,"results":"88","hashOfConfig":"48"},{"size":4876,"mtime":1613325486561,"results":"89","hashOfConfig":"48"},{"size":3211,"mtime":1613325501318,"results":"90","hashOfConfig":"48"},{"size":4551,"mtime":1613840241654,"results":"91","hashOfConfig":"48"},{"size":934,"mtime":1613921053484,"results":"92","hashOfConfig":"48"},{"size":3161,"mtime":1613921799769,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1ru1llb",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"C:\\Users\\Legion\\bankofstates\\src\\index.js",[],["192","193"],"C:\\Users\\Legion\\bankofstates\\src\\App.js",[],"C:\\Users\\Legion\\bankofstates\\src\\reportWebVitals.js",[],"C:\\Users\\Legion\\bankofstates\\src\\header\\Header.js",["194"],"C:\\Users\\Legion\\bankofstates\\src\\home\\Home.js",[],"C:\\Users\\Legion\\bankofstates\\src\\home\\Banner.js",[],"C:\\Users\\Legion\\bankofstates\\src\\StateProvider.js",[],"C:\\Users\\Legion\\bankofstates\\src\\reducer.js",[],"C:\\Users\\Legion\\bankofstates\\src\\about\\About.js",[],"C:\\Users\\Legion\\bankofstates\\src\\product\\Product.js",[],"C:\\Users\\Legion\\bankofstates\\src\\price\\Price.js",[],"C:\\Users\\Legion\\bankofstates\\src\\footer\\Footer.js",[],"C:\\Users\\Legion\\bankofstates\\src\\login\\Login.js",["195"],"import * as React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { Button, LinearProgress } from \"@material-ui/core\";\r\nimport { TextField } from \"formik-material-ui\";\r\nimport service from \"../service/bankService\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as Yup from \"yup\";\r\nimport \"./Login.css\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  password: Yup.string().required(\"Required\"),\r\n  username: Yup.string().required(\"Required\"),\r\n});\r\n\r\nconst LoginForm = (props) => (\r\n  <div className=\"container\">\r\n    <fieldset>\r\n      <legend>Login</legend>\r\n      <Form>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              name=\"username\"\r\n              type=\"text\"\r\n              label=\"User Name\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              name=\"password\"\r\n            />\r\n            {props.isSubmitting && <LinearProgress />}\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-4 text-center p-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={props.isSubmitting}\r\n              onClick={props.submitForm}\r\n              className=\"login__btn\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </fieldset>\r\n  </div>\r\n);\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [{ userInfo }, dispatch] = useStateValue();\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          username: \"\",\r\n          password: \"\",\r\n        }}\r\n        validationSchema={LoginSchema}\r\n        onSubmit={(values, actions) => {\r\n          service.login(values).then((response) => {\r\n            if (response.status === 200) {\r\n              const userInfo = response.data;\r\n              localStorage.setItem(\r\n                \"auth\",\r\n                JSON.stringify({\r\n                  token: userInfo.jwt,\r\n                })\r\n              );\r\n              dispatch({\r\n                type: \"LOGIN\",\r\n                item: userInfo,\r\n              });\r\n              if (userInfo?.user?.isAdmin) {\r\n                history.push(\"/admin\");\r\n              } else {\r\n                history.push(\"/user\");\r\n              }\r\n              toast.success(\"Login Successful\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n              });\r\n            \r\n              actions.resetForm();\r\n            }\r\n          });\r\n          actions.setSubmitting(false);\r\n        }}\r\n        component={LoginForm}\r\n      ></Formik>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Login;","C:\\Users\\Legion\\bankofstates\\src\\register\\Register.js",[],"C:\\Users\\Legion\\bankofstates\\src\\service\\bankService.js",[],"C:\\Users\\Legion\\bankofstates\\src\\user\\User.js",[],"C:\\Users\\Legion\\bankofstates\\src\\admin\\Admin.js",["196"],"import React from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory } from \"react-router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\nimport AccountBalanceWallet from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport AccountBalance from \"@material-ui/icons/AccountBalance\";\r\nimport AttachMoney from \"@material-ui/icons/AttachMoney\";\r\nimport DateRange from \"@material-ui/icons/DateRange\";\r\nimport Update from \"@material-ui/icons/Update\";\r\nimport Accessibility from \"@material-ui/icons/Accessibility\";\r\nimport GridItem from \"../components/Grid/GridItem.js\";\r\nimport GridContainer from \"../components/Grid/GridContainer.js\";\r\nimport Card from \"../components/Card/Card.js\";\r\nimport CardHeader from \"../components/Card/CardHeader.js\";\r\nimport CardBody from \"../components/Card/CardBody.js\";\r\nimport CardIcon from \"../components/Card/CardIcon.js\";\r\nimport CardFooter from \"../components/Card/CardFooter.js\";\r\nimport PlotlyChart from \"../chart/PlotlyChart\";\r\nimport styles from \"../styles/dashboardStyle.js\";\r\nimport _ from \"lodash\";\r\nconst useStyles = makeStyles(styles);\r\nconst Admin = () => {\r\n  const classes = useStyles();\r\n  const [{ userInfo }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const transactions = userInfo.user.transactions;\r\n  const uniqDates = _.uniq(_.map(transactions, \"date\")).sort();\r\n  const depositArray = [];\r\n  const withdrawalArray = [];\r\n  const transferArray = [];\r\n  uniqDates.forEach(function (key) {\r\n    const deposits = _.filter(transactions, function (transaction) {\r\n      return transaction.type === \"DEPOSIT\" && transaction.date === key;\r\n    });\r\n    const withdraws = _.filter(transactions, function (transaction) {\r\n      return transaction.type === \"WITHDRAW\" && transaction.date === key;\r\n    });\r\n    const transfers = _.filter(transactions, function (transaction) {\r\n      return transaction.isTransfer && transaction.date === key;\r\n    });\r\n    const depositAmounts = _.map(deposits, \"amount\");\r\n    const withdrawAmounts = _.map(withdraws, \"amount\");\r\n    const transferAmounts = _.map(transfers, \"amount\");\r\n    const sumOfDeposits = _.sum(depositAmounts);\r\n    const sumOfWithdraws = _.sum(withdrawAmounts);\r\n    const sumOfTransfers = _.sum(transferAmounts);\r\n    depositArray.push(sumOfDeposits);\r\n    withdrawalArray.push(sumOfWithdraws);\r\n    const transferObject = {\r\n      date: key.substring(0, 5),\r\n      amount: sumOfTransfers,\r\n    };\r\n    transferArray.push(transferObject);\r\n  });\r\n  const totalDeposit = _.sum(depositArray);\r\n  const totalWithdrawal = _.sum(withdrawalArray);\r\n  const orderedTransferArray = _.orderBy(transferArray, [\"amount\"]).reverse();\r\n  const depositData = [\r\n    {\r\n      type: \"bar\",\r\n      x: uniqDates,\r\n      y: depositArray,\r\n    },\r\n  ];\r\n  const withdrawalData = [\r\n    {\r\n      type: \"scatter\",\r\n      x: uniqDates,\r\n      y: withdrawalArray,\r\n    },\r\n  ];\r\n  const transferData = [\r\n    {\r\n      type: \"funnel\",\r\n      x: _.map(orderedTransferArray, \"amount\"),\r\n      y: _.map(orderedTransferArray, \"date\"),\r\n      hoverinfo: \"percent total+x\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      {!userInfo && history.push(\"/login\")}\r\n      {userInfo &&\r\n        userInfo.user &&\r\n        !userInfo.user.isAdmin &&\r\n        history.push(\"/login\")}\r\n      {userInfo && userInfo.user && userInfo.user.isAdmin && (\r\n        <div>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardHeader color=\"warning\" stats icon>\r\n                  <CardIcon color=\"warning\">\r\n                    <AccountBalance />\r\n                  </CardIcon>\r\n                  <p className={classes.cardCategory}>Total Balance</p>\r\n                  <h3 className={classes.cardTitle}>$ {userInfo.user.totalBalance}</h3>\r\n                </CardHeader>\r\n                <CardFooter stats>\r\n                  <div className={classes.stats}>\r\n                    <Update />\r\n                    Just Updated\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardHeader color=\"success\" stats icon>\r\n                  <CardIcon color=\"success\">\r\n                    <AttachMoney />\r\n                  </CardIcon>\r\n                  <p className={classes.cardCategory}>Total Deposits</p>\r\n                  <h3 className={classes.cardTitle}>$ {totalDeposit}</h3>\r\n                </CardHeader>\r\n                <CardFooter stats>\r\n                  <div className={classes.stats}>\r\n                    <DateRange />\r\n                    Last 1 Week\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardHeader color=\"danger\" stats icon>\r\n                  <CardIcon color=\"danger\">\r\n                    <AccountBalanceWallet />\r\n                  </CardIcon>\r\n                  <p className={classes.cardCategory}>Total Withdrawals</p>\r\n                  <h3 className={classes.cardTitle}>$ {totalWithdrawal}</h3>\r\n                </CardHeader>\r\n                <CardFooter stats>\r\n                  <div className={classes.stats}>\r\n                    <DateRange />\r\n                    Last 1 Week\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardHeader color=\"info\" stats icon>\r\n                  <CardIcon color=\"info\">\r\n                    <Accessibility />\r\n                  </CardIcon>\r\n                  <p className={classes.cardCategory}>Total Users</p>\r\n                  <h3 className={classes.cardTitle}>{userInfo.user.totalUsers}</h3>\r\n                </CardHeader>\r\n                <CardFooter stats>\r\n                  <div className={classes.stats}>\r\n                    <Update />\r\n                    Latest\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card chart>\r\n                <CardHeader color=\"success\">\r\n                  <h4 color=\"white\">Total Deposit Trends</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <PlotlyChart data={depositData} />\r\n                </CardBody>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card chart>\r\n                <CardHeader color=\"danger\">\r\n                  <h4 color=\"white\">Total Withdrawal Trends</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <PlotlyChart data={withdrawalData} />\r\n                </CardBody>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card chart>\r\n                <CardHeader color=\"info\">\r\n                  <h4 color=\"white\">Total Transfer Trends</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <PlotlyChart data={transferData} />\r\n                </CardBody>\r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Admin;","C:\\Users\\Legion\\bankofstates\\src\\menus\\UserMenu.js",[],"C:\\Users\\Legion\\bankofstates\\src\\menus\\AdminMenu.js",[],"C:\\Users\\Legion\\bankofstates\\src\\components\\Card\\CardHeader.js",[],"C:\\Users\\Legion\\bankofstates\\src\\components\\Grid\\GridContainer.js",[],"C:\\Users\\Legion\\bankofstates\\src\\components\\Grid\\GridItem.js",[],"C:\\Users\\Legion\\bankofstates\\src\\components\\Card\\Card.js",[],"C:\\Users\\Legion\\bankofstates\\src\\components\\Card\\CardBody.js",[],"C:\\Users\\Legion\\bankofstates\\src\\components\\Card\\CardIcon.js",[],"C:\\Users\\Legion\\bankofstates\\src\\components\\Card\\CardFooter.js",[],"C:\\Users\\Legion\\bankofstates\\src\\styles\\dashboardStyle.js",[],"C:\\Users\\Legion\\bankofstates\\src\\chart\\PlotlyChart.js",[],"C:\\Users\\Legion\\bankofstates\\src\\styles\\cardHeaderStyle.js",[],"C:\\Users\\Legion\\bankofstates\\src\\styles\\cardBodyStyle.js",[],"C:\\Users\\Legion\\bankofstates\\src\\styles\\cardStyle.js",[],"C:\\Users\\Legion\\bankofstates\\src\\styles\\colors.js",[],"C:\\Users\\Legion\\bankofstates\\src\\styles\\cardIconStyle.js",[],"C:\\Users\\Legion\\bankofstates\\src\\styles\\cardFooterStyle.js",[],"C:\\Users\\Legion\\bankofstates\\src\\logout\\Logout.js",["197"],"C:\\Users\\Legion\\bankofstates\\src\\deposit\\Deposit.js",[],"C:\\Users\\Legion\\bankofstates\\src\\styles\\typographyStyle.js",[],"C:\\Users\\Legion\\bankofstates\\src\\account\\AccountInfo.js",["198"],"import React from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport AccountBalance from \"@material-ui/icons/AccountBalance\";\r\n\r\nimport GridItem from \"../components/Grid/GridItem.js\";\r\nimport GridContainer from \"../components/Grid/GridContainer.js\";\r\nimport Card from \"../components/Card/Card.js\";\r\nimport CardHeader from \"../components/Card/CardHeader.js\";\r\nimport CardIcon from \"../components/Card/CardIcon.js\";\r\nimport styles from \"../styles/dashboardStyle.js\";\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst AccountInfo = () => {\r\n  const classes = useStyles();\r\n  const [{ userInfo }, dispatch] = useStateValue();\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={6}>\r\n          <Card>\r\n            <CardHeader color=\"info\" icon>\r\n              <CardIcon color=\"info\">\r\n                <AccountBalance />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Account Number</p>\r\n              <h3 className={classes.cardTitle}>\r\n                {userInfo.user.accountNumber}\r\n              </h3>\r\n            </CardHeader>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={6}>\r\n          <Card>\r\n            <CardHeader color=\"success\" icon>\r\n              <CardIcon color=\"success\">\r\n                <AccountBalanceWalletIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Balance</p>\r\n              <h3 className={classes.cardTitle}>\r\n                $ {userInfo.user.accountBalance}\r\n              </h3>\r\n            </CardHeader>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountInfo;\r\n","C:\\Users\\Legion\\bankofstates\\src\\account\\Transactions.js",[],"C:\\Users\\Legion\\bankofstates\\src\\service\\axiosInstance.js",[],"C:\\Users\\Legion\\bankofstates\\src\\withdraw\\Withdraw.js",[],"C:\\Users\\Legion\\bankofstates\\src\\transfer\\AddRecipient.js",["199"],"import React from \"react\";\r\n\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { Button, LinearProgress } from \"@material-ui/core\";\r\nimport { TextField } from \"formik-material-ui\";\r\nimport service from \"../service/bankService\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory } from \"react-router\";\r\nimport AccountInfo from \"../account/AccountInfo\";\r\nimport Recipients from \"./Recipients\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as Yup from \"yup\";\r\nimport styles from \"../styles/typographyStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst RecipientSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n  phone: Yup.number()\r\n    .positive(\"Phone Number can't start with a minus\")\r\n    .integer(\"A phone number can't include a decimal point\")\r\n    .required(\"Contact Number is Required\"),\r\n  bankName: Yup.string().required(\"Bank Name is Required\"),\r\n  bankNumber: Yup.string().required(\"Bank Number is Required\"),\r\n});\r\n\r\nconst RecipientForm = (props) => (\r\n  <div>\r\n    <fieldset>\r\n      <legend>Add Recipient</legend>\r\n      <Form>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field component={TextField} name=\"name\" type=\"text\" label=\"Name\" />\r\n          </div>\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"number\"\r\n              label=\"Contact Number\"\r\n              name=\"phone\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"Bank Name\"\r\n              name=\"bankName\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"Bank Number\"\r\n              name=\"bankNumber\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={props.isSubmitting}\r\n              onClick={props.submitForm}\r\n              className=\"Recipient__btn\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-4 text-center p-3\">\r\n            {props.isSubmitting && <LinearProgress />}\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </fieldset>\r\n  </div>\r\n);\r\n\r\nconst AddRecipient = () => {\r\n  const [{ userInfo, recipients }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      {!userInfo && history.push(\"/login\")}\r\n      {userInfo && userInfo.user && (\r\n        <div>\r\n          <AccountInfo />\r\n          <div>\r\n            <Formik\r\n              initialValues={{\r\n                name: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                bankName: \"\",\r\n                bankNumber: \"\",\r\n              }}\r\n              validationSchema={RecipientSchema}\r\n              onSubmit={(values, actions) => {\r\n                service.addRecipient(values).then((response) => {\r\n                  if (response.status === 200) {\r\n                    if (response.data.success) {\r\n                      const userInfo = response.data;\r\n                      dispatch({\r\n                        type: \"UPDATE\",\r\n                        item: userInfo,\r\n                      });\r\n                      toast.success(userInfo.message, {\r\n                        position: toast.POSITION.TOP_CENTER,\r\n                      });\r\n                      actions.resetForm();\r\n                    }\r\n                  }\r\n                });\r\n                actions.setSubmitting(false);\r\n              }}\r\n              component={RecipientForm}\r\n            ></Formik>\r\n            <ToastContainer />\r\n          </div>\r\n          <Divider />\r\n          <h1 className={classes.infoText}>Recipients</h1>\r\n          <Recipients />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRecipient;","C:\\Users\\Legion\\bankofstates\\src\\transfer\\Recipients.js",[],"C:\\Users\\Legion\\bankofstates\\src\\transfer\\Transfer.js",[],"C:\\Users\\Legion\\bankofstates\\src\\admin\\UserMgmt.js",["200"],"import React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory } from \"react-router\";\r\nimport bankService from \"../service/bankService\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport { unstable_createMuiStrictModeTheme } from \"@material-ui/core\";\r\n\r\nconst UserMgmt = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [{ userInfo }] = useStateValue();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    bankService.getAllUsers().then((response) => {\r\n      setUsers(response.data.users);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {!userInfo && history.push(\"/login\")}\r\n      {userInfo &&\r\n        userInfo.user &&\r\n        !userInfo.user.isAdmin &&\r\n        history.push(\"/login\")}\r\n      {userInfo && userInfo.user && userInfo.user.isAdmin && (\r\n        <UserDetails users={users} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMgmt;","C:\\Users\\Legion\\bankofstates\\src\\admin\\UserDetails.js",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":13,"column":30,"nodeType":"207","messageId":"208","endLine":13,"endColumn":38},{"ruleId":"205","severity":1,"message":"209","line":61,"column":12,"nodeType":"207","messageId":"208","endLine":61,"endColumn":20},{"ruleId":"205","severity":1,"message":"206","line":25,"column":24,"nodeType":"207","messageId":"208","endLine":25,"endColumn":32},{"ruleId":"205","severity":1,"message":"209","line":8,"column":12,"nodeType":"207","messageId":"208","endLine":8,"endColumn":20},{"ruleId":"205","severity":1,"message":"206","line":18,"column":24,"nodeType":"207","messageId":"208","endLine":18,"endColumn":32},{"ruleId":"205","severity":1,"message":"210","line":99,"column":22,"nodeType":"207","messageId":"208","endLine":99,"endColumn":32},{"ruleId":"205","severity":1,"message":"211","line":6,"column":10,"nodeType":"207","messageId":"208","endLine":6,"endColumn":43},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'userInfo' is assigned a value but never used.","'recipients' is assigned a value but never used.","'unstable_createMuiStrictModeTheme' is defined but never used.","no-global-assign","no-unsafe-negation"]